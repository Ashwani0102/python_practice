#  Insert 10 linked list and check whether entered linked list is pallindrom or not
class Node:
    def __init__(self,val):
        self.val=val
        self.prev=None
        self.next=None
def printlinkedlist(temp):
    values = []
    while temp is not None:
        values.append(temp.val)
        temp=temp.next
    return values    
head=Node(1)
tail=head
i=0
while i<10:
    a=int(input("Enter the number : "))
    temp_node=Node(a)
    tail.next=temp_node
    temp_node.prev=tail
    tail=tail.next
    i=i+1 
values=printlinkedlist(head)             
is_Pall=True
i=0
j=len(values)-1
while i<=j:
    if values[i]==values[j]:
        i=i+1
        j=j-1   
    else:
        print("Entered linked list is not Pallindrom")
        is_Pall=False
        break  
if is_Pall==True:
    print("Entered Linked list is Pallindrom")               

# Double link list
class Node:
    def __init__(self,val):
        self.val = val
        self.prev=None
        self.next=None
def printlinkedlist(temp):
    while temp is not None:
        print(temp.val)
        temp=temp.next        
head=Node(1)
tail=head
i=0
while i<3:
    a=int(input("Enter the number"))
    temp_node=Node(a)
    tail.next=temp_node
    temp_node.prev=tail
    tail=tail.next
    i=i+1
printlinkedlist(head)  

# Creation of Linked list
class Node:

    def __init__(self,val):

        self.val = val
        self.next=None

def insert_at_front(head,val):

    new_node = Node(val)
    new_node.next=head
    head = new_node
    return head
    
def print_linked_list(temp):

    temp=head

    while temp is not None:
        print(temp.val)
        temp = temp.next
    
head = Node(1)
print_linked_list(head)
print("*"*80)
head=insert_at_front(head,2)
print_linked_list(head)
print("*"*80)
head=insert_at_front(head,3)
print_linked_list
